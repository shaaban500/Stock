@using Stock.Domain.ViewModels.Purchase;
@model GetAllProductStoreViewModel
@{
    ViewData["Title"] = "ProductStores";
}

<div class="d-flex justify-content-center mb-5 w-100">
    <div class="d-flex justify-content-between align-items-center gap-3 w-75">
        <form method="post" asp-controller="ProductStores" asp-action="GetAll" enctype="multipart/form-data">
            <div class="d-flex align-items-center">
                <div class="form-group me-2">
                    <select name="SelectedStoreId" class="form-select" asp-items="@(new SelectList(Model.Stores, "Id", "Name"))">
                        <option> choose a store</option>
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Get Products</button>
            </div>
        </form>
        <div class="d-flex flex-column align-items-center justify-content-center">
            <a onclick="showInPopup('@Url.Action("AddOrEdit","ProductStores",null,Context.Request.Scheme)','New Store')" class="btn btn-dark">
                <i class="fas fa-add me-2"></i>
                new purchase
            </a>
        </div>
    </div>
</div>

<div class="d-flex justify-content-center w-100">
    <div class="d-flex justify-content-between align-items-center">
        @Model?.SelectedStore?.Name
    </div>
</div>

<div class="d-flex justify-content-center">
    <table class="table text-center w-75">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    Quantity
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @item?.Id
                    </td>
                    <td>
                        @item?.Name
                    </td>
                    <td>
                        @item?.Quantity
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>